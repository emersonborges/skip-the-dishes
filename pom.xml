<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.skip.the.dishes</groupId>
	<artifactId>skip-the-dishes</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<modules>
		<module>skip-the-dishes-products</module>
		<module>skip-the-dishes-orders</module>
		<module>skip-the-dishes-orders-processor</module>
		<module>skip-the-dishes-products-api</module>
	</modules>
	<packaging>pom</packaging>

	<name>skip-the-dishes</name>
	<description>Demo project for Spring Boot</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.14.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<cobertura-maven-plugin.version>2.7</cobertura-maven-plugin.version>
		<lombok.version>1.16.18</lombok.version>
		<opentracing-spring-cloud-starter.version>0.1.13</opentracing-spring-cloud-starter.version>
		<opentracing-spring-jaeger-starter.version>0.1.1</opentracing-spring-jaeger-starter.version>
		<spock-core.version>1.1-groovy-2.4</spock-core.version>
		<cglib-nodep.version>3.2.4</cglib-nodep.version>
		<spring-cloud-netflix-dependencies.version>1.4.4.RELEASE</spring-cloud-netflix-dependencies.version>
		<spring.kafka.version>1.3.3.RELEASE</spring.kafka.version>
		<opentracing-kafka-spring.version>0.0.11</opentracing-kafka-spring.version>
		<hibernate-validator.version>6.0.10.Final</hibernate-validator.version>
		<validation-api.version>2.0.1.Final</validation-api.version>
		<commons-io.version>1.3.2</commons-io.version>
		<spring.auto.restdocs.version>1.0.13</spring.auto.restdocs.version>
		<spring-restdocs.version>1.2.3.RELEASE</spring-restdocs.version>
		<gmavenplus-plugin.version>1.5</gmavenplus-plugin.version>
		<asciidoctor-maven-plugin.version>1.5.3</asciidoctor-maven-plugin.version>
		<javax.el-api.version>2.2.4</javax.el-api.version>
		<hibernate-validator.version>5.2.4.Final</hibernate-validator.version>
		<elasticsearch.version>6.2.4</elasticsearch.version>
        <modelmapper.version>2.0.0</modelmapper.version>
        <opentracing-elasticsearch-client.version>0.0.4</opentracing-elasticsearch-client.version>
		<dockerfile-maven-plugin.version>1.4.3</dockerfile-maven-plugin.version>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>com.skip.the.dishes</groupId>
				<artifactId>skip-the-dishes-products</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>com.skip.the.dishes</groupId>
				<artifactId>skip-the-dishes-orders</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>com.skip.the.dishes</groupId>
				<artifactId>skip-the-dishes-orders-processor</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>com.skip.the.dishes</groupId>
				<artifactId>skip-the-dishes-products-api</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.projectlombok</groupId>
				<artifactId>lombok</artifactId>
				<version>${lombok.version}</version>
			</dependency>
			<!-- Open tracing -->
			<dependency>
				<groupId>io.opentracing.contrib</groupId>
				<artifactId>opentracing-spring-cloud-starter</artifactId>
				<version>${opentracing-spring-cloud-starter.version}</version>
			</dependency>
			<dependency>
				<groupId>io.opentracing.contrib</groupId>
				<artifactId>opentracing-spring-jaeger-starter</artifactId>
				<version>${opentracing-spring-jaeger-starter.version}</version>
			</dependency>
			<dependency>
				<groupId>io.opentracing.contrib</groupId>
				<artifactId>opentracing-kafka-spring</artifactId>
				<version>${opentracing-kafka-spring.version}</version>
			</dependency>
			<dependency>
				<groupId>io.opentracing.contrib</groupId>
				<artifactId>opentracing-elasticsearch-client</artifactId>
				<version>${opentracing-elasticsearch-client.version}</version>
			</dependency>
			<!-- Kafka -->
			<dependency>
				<groupId>org.springframework.kafka</groupId>
				<artifactId>spring-kafka</artifactId>
				<version>${spring.kafka.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-netflix-dependencies</artifactId>
				<version>${spring-cloud-netflix-dependencies.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>javax.validation</groupId>
				<artifactId>validation-api</artifactId>
				<version>${validation-api.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>${commons-io.version}</version>
			</dependency>

			<!-- Elasticsearch -->
			<dependency>
				<groupId>org.elasticsearch.client</groupId>
				<artifactId>transport</artifactId>
				<version>${elasticsearch.version}</version>
			</dependency>
			<dependency>
				<groupId>org.elasticsearch</groupId>
				<artifactId>elasticsearch</artifactId>
				<version>${elasticsearch.version}</version>
			</dependency>

			<!-- Model mapper -->
			<dependency>
				<groupId>org.modelmapper</groupId>
				<artifactId>modelmapper</artifactId>
				<version>${modelmapper.version}</version>
			</dependency>

			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-validator</artifactId>
				<version>${hibernate-validator.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.restdocs</groupId>
				<artifactId>spring-restdocs-mockmvc</artifactId>
				<version>${spring-restdocs.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>capital.scalable</groupId>
				<artifactId>spring-auto-restdocs-core</artifactId>
				<version>${spring.auto.restdocs.version}</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>org.spockframework</groupId>
				<artifactId>spock-core</artifactId>
				<version>${spock-core.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency> <!-- enables mocking of classes (in addition to interfaces) -->
				<groupId>cglib</groupId>
				<artifactId>cglib-nodep</artifactId>
				<version>${cglib-nodep.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>javax.el</groupId>
				<artifactId>javax.el-api</artifactId>
				<version>${javax.el-api.version}</version>
				<scope>test</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<finalName>${project.artifactId}</finalName>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.codehaus.gmavenplus</groupId>
					<artifactId>gmavenplus-plugin</artifactId>
					<version>${gmavenplus-plugin.version}</version>
					<executions>
						<execution>
							<goals>
								<goal>compile</goal>
								<goal>testCompile</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<!-- Spring Rest Docs -->
				<plugin>
					<groupId>org.asciidoctor</groupId>
					<artifactId>asciidoctor-maven-plugin</artifactId>
					<version>${asciidoctor-maven-plugin.version}</version>
					<executions>
						<execution>
							<id>generate-docs</id>
							<phase>prepare-package</phase>
							<goals>
								<goal>process-asciidoc</goal>
							</goals>
							<configuration>
								<backend>html</backend>
								<doctype>book</doctype>
								<attributes>
									<snippets>${project.build.directory}/generated-snippets</snippets>
									<source-highlighter>highlight.js</source-highlighter>
								</attributes>
							</configuration>
						</execution>
					</executions>
					<dependencies>
						<dependency>
							<groupId>org.springframework.restdocs</groupId>
							<artifactId>spring-restdocs-asciidoctor</artifactId>
							<version>${spring-restdocs.version}</version>
						</dependency>
					</dependencies>
				</plugin>

				<!-- Spring Auto Rest Docs -->
				<plugin>
					<artifactId>maven-surefire-plugin</artifactId>
					<configuration>
						<includes>
							<include>**/*Test.java</include>
						</includes>
						<systemPropertyVariables>
							<org.springframework.restdocs.outputDir>
								${project.build.directory}/generated-snippets
							</org.springframework.restdocs.outputDir>
							<org.springframework.restdocs.javadocJsonDir>
								${project.build.directory}/generated-javadoc-json
							</org.springframework.restdocs.javadocJsonDir>
						</systemPropertyVariables>
					</configuration>
				</plugin>
				<plugin>
					<artifactId>maven-javadoc-plugin</artifactId>
					<extensions>true</extensions>
					<executions>
						<execution>
							<id>generate-javadoc-json</id>
							<phase>compile</phase>
							<goals>
								<goal>javadoc-no-fork</goal>
							</goals>
							<configuration>
								<doclet>capital.scalable.restdocs.jsondoclet.ExtractDocumentationAsJsonDoclet</doclet>
								<docletArtifact>
									<groupId>capital.scalable</groupId>
									<artifactId>spring-auto-restdocs-json-doclet</artifactId>
									<version>1.0.13</version>
								</docletArtifact>
								<destDir>generated-javadoc-json</destDir>
								<reportOutputDirectory>${project.build.directory}</reportOutputDirectory>
								<useStandardDocletOptions>false</useStandardDocletOptions>
								<show>package</show>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>com.spotify</groupId>
					<artifactId>dockerfile-maven-plugin</artifactId>
					<version>${dockerfile-maven-plugin.version}</version>
					<executions>
						<execution>
							<id>default</id>
							<goals>
								<goal>build</goal>
								<goal>push</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<repository>emersonborges/${project.artifactId}</repository>
						<tag>${project.version}</tag>
						<buildArgs>
							<JAR_FILE>${project.build.finalName}.jar</JAR_FILE>
						</buildArgs>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<version>${cobertura-maven-plugin.version}</version>
				<configuration>
					<instrumentation>
						<ignoreMethodAnnotations>
							<ignoreMethodAnnotation>lombok.Generated</ignoreMethodAnnotation>
						</ignoreMethodAnnotations>
					</instrumentation>
					<formats>
						<format>html</format>
						<format>xml</format>
					</formats>
					<check />
				</configuration>
			</plugin>
		</plugins>
	</build>


</project>
